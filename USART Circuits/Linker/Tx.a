;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2/2/2014
;Author  : Juhanda
;Company :
;Comments:
;
;
;Chip type               : ATtiny2313
;AVR Core Clock frequency: 1.843200 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 32
;*****************************************************/
;
;#include <tiny2313.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x50
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_standby=0x40
;PCODE: $00000006 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000007 VOL: 0
	#endif
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 0
;#include <delay.h>
;#include <stdio.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000A VOL: 0
; 0000 001F // Declare your local variables here
; 0000 0020 
; 0000 0021 // Crystal Oscillator division factor: 1
; 0000 0022 #pragma optsize-
; 0000 0023 CLKPR=0x80;
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 0024 CLKPR=0x00;
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0025 #ifdef _OPTIMIZE_SIZE_
; 0000 0026 #pragma optsize+
; 0000 0027 #endif
; 0000 0028 
; 0000 0029 // Input/Output Ports initialization
; 0000 002A // Port A initialization
; 0000 002B // Func2=In Func1=In Func0=In
; 0000 002C // State2=T State1=T State0=T
; 0000 002D PORTA=0x00;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002E DDRA=0x00;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 002F 
; 0000 0030 // Port B initialization
; 0000 0031 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0032 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0033 PORTB=0x00;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0034 DDRB=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0035 
; 0000 0036 // Port D initialization
; 0000 0037 // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0038 // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0039 PORTD=0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 003A DDRD=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 003B 
; 0000 003C // Timer/Counter 0 initialization
; 0000 003D // Clock source: System Clock
; 0000 003E // Clock value: Timer 0 Stopped
; 0000 003F // Mode: Normal top=0xFF
; 0000 0040 // OC0A output: Disconnected
; 0000 0041 // OC0B output: Disconnected
; 0000 0042 TCCR0A=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0043 TCCR0B=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0044 TCNT0=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0045 OCR0A=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0046 OCR0B=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0047 
; 0000 0048 // Timer/Counter 1 initialization
; 0000 0049 // Clock source: System Clock
; 0000 004A // Clock value: Timer1 Stopped
; 0000 004B // Mode: Normal top=0xFFFF
; 0000 004C // OC1A output: Discon.
; 0000 004D // OC1B output: Discon.
; 0000 004E // Noise Canceler: Off
; 0000 004F // Input Capture on Falling Edge
; 0000 0050 // Timer1 Overflow Interrupt: Off
; 0000 0051 // Input Capture Interrupt: Off
; 0000 0052 // Compare A Match Interrupt: Off
; 0000 0053 // Compare B Match Interrupt: Off
; 0000 0054 TCCR1A=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0055 TCCR1B=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0056 TCNT1H=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0057 TCNT1L=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0058 ICR1H=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0059 ICR1L=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 005A OCR1AH=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 005B OCR1AL=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 005C OCR1BH=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 005D OCR1BL=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 005E 
; 0000 005F // External Interrupt(s) initialization
; 0000 0060 // INT0: Off
; 0000 0061 // INT1: Off
; 0000 0062 // Interrupt on any change on pins PCINT0-7: Off
; 0000 0063 GIMSK=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0064 MCUCR=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0065 
; 0000 0066 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0067 TIMSK=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0068 
; 0000 0069 // Universal Serial Interface initialization
; 0000 006A // Mode: Disabled
; 0000 006B // Clock source: Register & Counter=no clk.
; 0000 006C // USI Counter Overflow Interrupt: Off
; 0000 006D USICR=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 006E 
; 0000 006F // USART initialization
; 0000 0070 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0071 // USART Receiver: Off
; 0000 0072 // USART Transmitter: On
; 0000 0073 // USART Mode: Asynchronous
; 0000 0074 // USART Baud Rate: 2400
; 0000 0075 UCSRA=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0076 UCSRB=0x08;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0077 UCSRC=0x06;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0078 UBRRH=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0079 UBRRL=0x2F;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 007A 
; 0000 007B // Analog Comparator initialization
; 0000 007C // Analog Comparator: Off
; 0000 007D // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 007E ACSR=0x80;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 007F DIDR=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0080 
; 0000 0081   while (1)
;PCODE: $0000004F VOL: 0
; 0000 0082   {
; 0000 0083     printf("Bangsat\n\r");
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0084     delay_us(1000);
;PCODE: $00000057 VOL: 0
; 0000 0085   }
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0086 }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
