;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 10/15/2013
;Author  : SammyMaddog
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#define PUSH OCR1A
;#define PULL OCR1B
;#define RELAY PORTB.0
;
;char n = 0;
;
;void main(void)
; 0000 0022 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0023 // Declare your local variables here
; 0000 0024 
; 0000 0025 // Input/Output Ports initialization
; 0000 0026 // Port B initialization
; 0000 0027 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=Out
; 0000 0028 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=0
; 0000 0029 PORTB=0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 002A DDRB=0b00000111;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002B 
; 0000 002C // Port C initialization
; 0000 002D // Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 002E // State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 002F PORTC=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0030 DDRC=0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0031 
; 0000 0032 // Port D initialization
; 0000 0033 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0034 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0035 PORTD=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0036 DDRD=0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0037 
; 0000 0038 // Timer/Counter 0 initialization
; 0000 0039 // Clock source: System Clock
; 0000 003A // Clock value: Timer 0 Stopped
; 0000 003B TCCR0=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 003C TCNT0=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 003D 
; 0000 003E // Timer/Counter 1 initialization
; 0000 003F // Clock source: System Clock
; 0000 0040 // Clock value: 1000.000 kHz
; 0000 0041 // Mode: Fast PWM top=0x03FF
; 0000 0042 // OC1A output: Non-Inv.
; 0000 0043 // OC1B output: Non-Inv.
; 0000 0044 // Noise Canceler: Off
; 0000 0045 // Input Capture on Falling Edge
; 0000 0046 // Timer1 Overflow Interrupt: Off
; 0000 0047 // Input Capture Interrupt: Off
; 0000 0048 // Compare A Match Interrupt: Off
; 0000 0049 // Compare B Match Interrupt: Off
; 0000 004A TCCR1A=0xA3;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 004B TCCR1B=0x09;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004C TCNT1H=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004D TCNT1L=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 004E ICR1H=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 004F ICR1L=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0050 OCR1AH=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0051 OCR1AL=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0052 OCR1BH=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0053 OCR1BL=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0054 
; 0000 0055 // Timer/Counter 2 initialization
; 0000 0056 // Clock source: System Clock
; 0000 0057 // Clock value: Timer2 Stopped
; 0000 0058 // Mode: Normal top=0xFF
; 0000 0059 // OC2 output: Disconnected
; 0000 005A ASSR=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 005B TCCR2=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 005C TCNT2=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 005D OCR2=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005E 
; 0000 005F // External Interrupt(s) initialization
; 0000 0060 // INT0: Off
; 0000 0061 // INT1: Off
; 0000 0062 MCUCR=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0063 
; 0000 0064 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0065 TIMSK=0x00;
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0066 
; 0000 0067 // USART initialization
; 0000 0068 // USART disabled
; 0000 0069 UCSRB=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 006A 
; 0000 006B // Analog Comparator initialization
; 0000 006C // Analog Comparator: Off
; 0000 006D // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 006E ACSR=0x80;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 006F SFIOR=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0070 
; 0000 0071 // ADC initialization
; 0000 0072 // ADC disabled
; 0000 0073 ADCSRA=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0074 
; 0000 0075 // SPI initialization
; 0000 0076 // SPI disabled
; 0000 0077 SPCR=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0078 
; 0000 0079 // TWI initialization
; 0000 007A // TWI disabled
; 0000 007B TWCR=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 007C /*
; 0000 007D   for (n = 0; n < 1; n++)
; 0000 007E   {
; 0000 007F     delay_ms(100);
; 0000 0080   }
; 0000 0081 
; 0000 0082   RELAY = 1;
; 0000 0083 */
; 0000 0084   while (1)
;PCODE: $0000004A VOL: 0
; 0000 0085   {
; 0000 0086     PUSH = 440;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0087     PULL = 440;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0088   }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0089 }
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
